{"list":[{"title":"AlertedNodes","link":"<a href=\"global.html#AlertedNodes\">AlertedNodes</a>"},{"title":"AllowedValues","link":"<a href=\"global.html#AllowedValues\">AllowedValues</a>","description":"<p>Represents the allowed values for a field.</p>"},{"title":"AvailableDCTResponse","link":"<a href=\"global.html#AvailableDCTResponse\">AvailableDCTResponse</a>"},{"title":"AvailableSchemaResponse","link":"<a href=\"global.html#AvailableSchemaResponse\">AvailableSchemaResponse</a>"},{"title":"DataCaptureThread","link":"<a href=\"DataCaptureThread.html\">DataCaptureThread</a>","description":"<p>Private constructor. Use the <code>make()</code> method for creating new instances of DCTs.</p>"},{"title":"DataCaptureThread#config","link":"<a href=\"DataCaptureThread.html#config\">config</a>","description":"<p>The Data Capture Thread config.</p>"},{"title":"DataCaptureThread#dps","link":"<a href=\"DataCaptureThread.html#dps\">dps</a>","description":"<p>Data Per Second metrics.</p>"},{"title":"DataCaptureThread#getConfig","link":"<a href=\"DataCaptureThread.html#getConfig\">getConfig</a>","description":"<p>Returns the DCT config as stored on the instance. If a schema is provided, any properties missing from the\nschema will be dropped from the returned object. Any properties missing from the config and present on the\nschema will be returned with their default values as defined by the schema.</p>"},{"title":"DataCaptureThread#getMetadata","link":"<a href=\"DataCaptureThread.html#getMetadata\">getMetadata</a>","description":"<p>Shorthand method for returning the properties stored on the <code>STREAM_CONFIG_METADATA</code> config key. Depending on\nthe DCT implementation, this metadata can describe how the data is provided for the pipeline. One such example\ncould be the resolution of the extracted video frames that are fed into the computer vision pipelines.</p>"},{"title":"DataCaptureThread#isDirty","link":"<a href=\"DataCaptureThread.html#isDirty\">isDirty</a>","description":"<p>Signals syncronization on network node.</p>"},{"title":"DataCaptureThread#schema","link":"<a href=\"DataCaptureThread.html#schema\">schema</a>","description":"<p>The config schema used for validation.</p>"},{"title":"DataCaptureThread#setStats","link":"<a href=\"DataCaptureThread.html#setStats\">setStats</a>","description":"<p>Sets the statistics for this capture thread, as received from heartbeat.</p>"},{"title":"DataCaptureThread#stats","link":"<a href=\"DataCaptureThread.html#stats\">stats</a>","description":"<p>Stats.</p>"},{"title":"DataCaptureThread#time","link":"<a href=\"DataCaptureThread.html#time\">time</a>","description":"<p>Time.</p>"},{"title":"DataCaptureThread#updateConfig","link":"<a href=\"DataCaptureThread.html#updateConfig\">updateConfig</a>","description":"<p>Updates the config values of a DCT. The update is validated against the stored schema, if the validation fails\nthe errors are thrown.</p>\n<p>When updating, the DCT instance will be marked as dirty in order to be synchronized with the edge node by the\nnode manager handling the communication.</p>"},{"title":"DataCaptureThread#updateMetadata","link":"<a href=\"DataCaptureThread.html#updateMetadata\">updateMetadata</a>","description":"<p>Shorthand method for updating the DCT metadata stored on the <code>STREAM_CONFIG_METADATA</code> config key.</p>"},{"title":"DataCaptureThread.make","link":"<a href=\"DataCaptureThread.html#.make\">make</a>","description":"<p>Static factory to instantiate DataCaptureThreads.</p>\n<p>When called, will attempt to validate the config against the schema. Any errors will be thrown. This method\nis used both internally, when loading pipeline configurations from the heartbeat info, and when creating\nnew pipelines to be deployed on the network node.</p>"},{"title":"Field","link":"<a href=\"global.html#Field\">Field</a>","description":"<p>Represents a field in the configuration.</p>"},{"title":"InternalStateManager","link":"<a href=\"InternalStateManager.html\">InternalStateManager</a>","description":"<p>The InternalStateManager constructor.</p>"},{"title":"InternalStateManager#broadcastIgnoreRequestId","link":"<a href=\"InternalStateManager.html#broadcastIgnoreRequestId\">broadcastIgnoreRequestId</a>","description":"<p>Signals the registered threads to remove the watch for a specific session id.</p>"},{"title":"InternalStateManager#broadcastRequestId","link":"<a href=\"InternalStateManager.html#broadcastRequestId\">broadcastRequestId</a>","description":"<p>Broadcasts interest for a specific session id to all the registered threads. The session id will be used for\ncorrect routing of the received notifications from the network.</p>"},{"title":"InternalStateManager#broadcastUpdateFleet","link":"<a href=\"InternalStateManager.html#broadcastUpdateFleet\">broadcastUpdateFleet</a>","description":"<p>Broadcasts working fleet to all registered threads.</p>"},{"title":"InternalStateManager#getK8sClusterStatus","link":"<a href=\"InternalStateManager.html#getK8sClusterStatus\">getK8sClusterStatus</a>","description":"<p>Returns the Kubernetes cluster status as observed by the supervisor node.</p>"},{"title":"InternalStateManager#getNetworkSnapshot","link":"<a href=\"InternalStateManager.html#getNetworkSnapshot\">getNetworkSnapshot</a>","description":"<p>Returns the network information as received from the supervisors.</p>"},{"title":"InternalStateManager#getNetworkSupervisors","link":"<a href=\"InternalStateManager.html#getNetworkSupervisors\">getNetworkSupervisors</a>","description":"<p>Get the list of observed network supervisors.</p>"},{"title":"InternalStateManager#getNodeInfo","link":"<a href=\"InternalStateManager.html#getNodeInfo\">getNodeInfo</a>","description":"<p>Returns the processed heartbeat cached for a specific <code>node</code>.</p>"},{"title":"InternalStateManager#getUniverse","link":"<a href=\"InternalStateManager.html#getUniverse\">getUniverse</a>","description":"<p>Returns the list of all observed network nodes. An observed node is any of the nodes that published a\npayload, notification or heartbeat, which was intercepted by the worker threads, even if that message was\ndiscarded because it was not from the controlled working fleet.</p>"},{"title":"InternalStateManager#logger","link":"<a href=\"InternalStateManager.html#logger\">logger</a>","description":"<p>Logger handler.</p>"},{"title":"InternalStateManager#markNodeAsSeen","link":"<a href=\"InternalStateManager.html#markNodeAsSeen\">markNodeAsSeen</a>","description":"<p>Will mark a specific node as seen in the dictionary of nodes.</p>"},{"title":"InternalStateManager#nodeInfoUpdate","link":"<a href=\"InternalStateManager.html#nodeInfoUpdate\">nodeInfoUpdate</a>","description":"<p>Stores the processed heartbeat data into the in-memory storage.</p>"},{"title":"InternalStateManager#registerThread","link":"<a href=\"InternalStateManager.html#registerThread\">registerThread</a>","description":"<p>Registers a worker thread handler for enabling communication from the StateManager towards the thread.</p>"},{"title":"InternalStateManager#saveK8sClusterStatus","link":"<a href=\"InternalStateManager.html#saveK8sClusterStatus\">saveK8sClusterStatus</a>","description":"<p>Stores the Kubernetes cluster metrics as provided by the supervisor node.</p>"},{"title":"InternalStateManager#state","link":"<a href=\"InternalStateManager.html#state\">state</a>","description":"<p>The internal state to be stored and updated by this instance. The <code>state</code> property will hold:</p>\n<ul>\n<li>heartbeat information to be passed to worker threads for context</li>\n<li>other observed nodes (not registered in the working fleet)</li>\n<li>pending transactions (updates communicated to the node without any responses)</li>\n<li>network status as provided by the network supervisor</li>\n<li>Kubernetes cluster status as provided by the network supervisor (if deployed on Kubernetes)</li>\n</ul>"},{"title":"InternalStateManager#threads","link":"<a href=\"InternalStateManager.html#threads\">threads</a>","description":"<p>Handlers for the message processing threads.</p>"},{"title":"InternalStateManager#updateNetworkSnapshot","link":"<a href=\"InternalStateManager.html#updateNetworkSnapshot\">updateNetworkSnapshot</a>","description":"<p>Will store the network snapshot as seen from a specific supervisor node.</p>"},{"title":"IntervalDefinition","link":"<a href=\"global.html#IntervalDefinition\">IntervalDefinition</a>","description":"<p>Represents the configuration for an interval.</p>"},{"title":"IsObject","link":"<a href=\"global.html#IsObject\">IsObject</a>","description":"<p>Helper function that tests if a specific value is an Object.</p>"},{"title":"Logger","link":"<a href=\"Logger.html\">Logger</a>","description":"<p>The Logger constructor.</p>\n<p>Accepts the log level to output.</p>"},{"title":"Logger#_print","link":"<a href=\"Logger.html#_print\">_print</a>","description":"<p>Internal method that formats and outputs the logged message.</p>"},{"title":"Logger#debug","link":"<a href=\"Logger.html#debug\">debug</a>","description":"<p>Shorthand method for printing a debug level log entry.</p>"},{"title":"Logger#error","link":"<a href=\"Logger.html#error\">error</a>","description":"<p>Shorthand method for printing a critical error level log entry.</p>"},{"title":"Logger#getLevel","link":"<a href=\"Logger.html#getLevel\">getLevel</a>","description":"<p>Returns the currently configured logging level.</p>"},{"title":"Logger#log","link":"<a href=\"Logger.html#log\">log</a>","description":"<p>Shorthand method for printing a normal level log entry.</p>"},{"title":"Logger#setLevel","link":"<a href=\"Logger.html#setLevel\">setLevel</a>","description":"<p>Allows to set for a specific log level.</p>"},{"title":"Logger#type","link":"<a href=\"Logger.html#type\">type</a>","description":"<p>Flag for identifying this logger throughout the SDK.</p>"},{"title":"Logger#warn","link":"<a href=\"Logger.html#warn\">warn</a>","description":"<p>Shorthand method for printing an error or warning level log entry.</p>"},{"title":"NetworkRequest","link":"<a href=\"NetworkRequest.html\">NetworkRequest</a>","description":"<p>The NetworkRequest constructor.</p>"},{"title":"NetworkRequest#canResolve","link":"<a href=\"NetworkRequest.html#canResolve\">canResolve</a>","description":"<p>Returns <code>true</code> if all the transaction targets were hit and the responses are all successful.</p>"},{"title":"NetworkRequest#clearCompletionTimeout","link":"<a href=\"NetworkRequest.html#clearCompletionTimeout\">clearCompletionTimeout</a>","description":"<p>Clears the timeout for the resolving of the transaction.</p>"},{"title":"NetworkRequest#clearFirstResponseTimeout","link":"<a href=\"NetworkRequest.html#clearFirstResponseTimeout\">clearFirstResponseTimeout</a>","description":"<p>Clears the timeout for the first network response.</p>"},{"title":"NetworkRequest#close","link":"<a href=\"NetworkRequest.html#close\">close</a>","description":"<p>Closes the transaction and removes the completion timeout.</p>"},{"title":"NetworkRequest#closed","link":"<a href=\"NetworkRequest.html#closed\">closed</a>","description":"<p>Request status.</p>"},{"title":"NetworkRequest#getId","link":"<a href=\"NetworkRequest.html#getId\">getId</a>","description":"<p>Returns the transaction id.</p>"},{"title":"NetworkRequest#id","link":"<a href=\"NetworkRequest.html#id\">id</a>","description":"<p>Network request id.</p>"},{"title":"NetworkRequest#isClosed","link":"<a href=\"NetworkRequest.html#isClosed\">isClosed</a>","description":"<p>Returns the status of the transaction.</p>"},{"title":"NetworkRequest#isComplete","link":"<a href=\"NetworkRequest.html#isComplete\">isComplete</a>","description":"<p>Returns <code>true</code> if all the transaction targets were hit. The completion status concerns only if all the\nexpected notifications were received, it doesn't offer information about the success of the request.</p>"},{"title":"NetworkRequest#listWatches","link":"<a href=\"NetworkRequest.html#listWatches\">listWatches</a>","description":"<p>Returns all the notification <code>path</code>s watched by the current transaction.</p>"},{"title":"NetworkRequest#nodeRequestsHandler","link":"<a href=\"NetworkRequest.html#nodeRequestsHandler\">nodeRequestsHandler</a>","description":"<p>Reference to the network request handler that keeps track of all the open requests.</p>"},{"title":"NetworkRequest#onFail","link":"<a href=\"NetworkRequest.html#onFail\">onFail</a>","description":"<p>Fail callback.</p>"},{"title":"NetworkRequest#onSuccess","link":"<a href=\"NetworkRequest.html#onSuccess\">onSuccess</a>","description":"<p>Success callback.</p>"},{"title":"NetworkRequest#process","link":"<a href=\"NetworkRequest.html#process\">process</a>","description":"<p>Main processing function. All notifications should be routed through this method. When first notification is\nreceived, the timeout for the first response is cleared.</p>"},{"title":"NetworkRequest#reject","link":"<a href=\"NetworkRequest.html#reject\">reject</a>","description":"<p>Attempt to reject the transaction.</p>"},{"title":"NetworkRequest#resolve","link":"<a href=\"NetworkRequest.html#resolve\">resolve</a>","description":"<p>Attempt to resolve the transaction.</p>"},{"title":"NetworkRequest#setProcessingStrategy","link":"<a href=\"NetworkRequest.html#setProcessingStrategy\">setProcessingStrategy</a>","description":"<p>Loads a solving strategy for the current transaction.</p>"},{"title":"NetworkRequest#setTimeoutIds","link":"<a href=\"NetworkRequest.html#setTimeoutIds\">setTimeoutIds</a>","description":"<p>Sets the timeout ids for the two timeout callbacks.</p>\n<ul>\n<li>firstResponseTimeoutId is the callback id for the timer waiting for the first network response</li>\n<li>completionTimeoutId is the callback id for the timer keeping track of the successful completion of the whole\ntransaction.</li>\n</ul>"},{"title":"NetworkRequest#strategy","link":"<a href=\"NetworkRequest.html#strategy\">strategy</a>","description":"<p>The strategy to use when interpreting the stream of received notifications.</p>"},{"title":"NetworkRequest#targets","link":"<a href=\"NetworkRequest.html#targets\">targets</a>","description":"<p>A dictionary of targets to track when processing responses. It allows for correctly interpreting the flow\nof notifications received from the nodes.</p>"},{"title":"NetworkRequest#timeout","link":"<a href=\"NetworkRequest.html#timeout\">timeout</a>","description":"<p>Trigger the timeout on the transaction.</p>"},{"title":"NetworkRequest#timeoutIds","link":"<a href=\"NetworkRequest.html#timeoutIds\">timeoutIds</a>","description":"<p>Handlers for the timeouts.</p>"},{"title":"NetworkRequest#transactionNotifications","link":"<a href=\"NetworkRequest.html#transactionNotifications\">transactionNotifications</a>","description":"<p>A temporary storage for all the incoming notifications. Will be bubbled upwards when resolving the promise.</p>"},{"title":"NetworkRequest#updateTarget","link":"<a href=\"NetworkRequest.html#updateTarget\">updateTarget</a>","description":"<p>Pushes a notification onto the list of notifications linked to a specific target <code>path</code>.</p>"},{"title":"NetworkRequest#watch","link":"<a href=\"NetworkRequest.html#watch\">watch</a>","description":"<p>Registers a notification path to track when resolving the transaction.</p>"},{"title":"NetworkRequest#watches","link":"<a href=\"NetworkRequest.html#watches\">watches</a>","description":"<p>Returns <code>true</code> if the current transaction is keeping track of a specific notification <code>path</code>.</p>"},{"title":"NetworkRequestsHandler","link":"<a href=\"NetworkRequestsHandler.html\">NetworkRequestsHandler</a>"},{"title":"NetworkRequestsHandler#createRequest","link":"<a href=\"NetworkRequestsHandler.html#createRequest\">createRequest</a>","description":"<p>Creates a new transaction handling the message publishing for a network node.</p>"},{"title":"NetworkRequestsHandler#destroy","link":"<a href=\"NetworkRequestsHandler.html#destroy\">destroy</a>","description":"<p>Cleans up the transaction handler related to the supplied <code>path</code>.</p>"},{"title":"NetworkRequestsHandler#find","link":"<a href=\"NetworkRequestsHandler.html#find\">find</a>","description":"<p>Retrieves the transaction handler watching for the supplied <code>path</code>.</p>"},{"title":"NetworkRequestsHandler#index","link":"<a href=\"NetworkRequestsHandler.html#index\">index</a>","description":"<p>Indexes the transaction <code>request</code> by the specified notification <code>path</code> to watch for.</p>"},{"title":"NetworkRequestsHandler#pendingRequests","link":"<a href=\"NetworkRequestsHandler.html#pendingRequests\">pendingRequests</a>","description":"<p>The list of open transactions.</p>"},{"title":"NetworkRequestsHandler#requestsIndexes","link":"<a href=\"NetworkRequestsHandler.html#requestsIndexes\">requestsIndexes</a>","description":"<p>The list of object transactions indexed by the notification <code>path</code>s targeted.</p>"},{"title":"NodeManager","link":"<a href=\"NodeManager.html\">NodeManager</a>","description":"<p>The NodeManager constructor.</p>"},{"title":"NodeManager#_getRunningPipelines","link":"<a href=\"NodeManager.html#_getRunningPipelines\">_getRunningPipelines</a>","description":"<p>Returns the pipelines running on this node as they're reflected by the last received heartbeat.</p>"},{"title":"NodeManager#attachPluginInstance","link":"<a href=\"NodeManager.html#attachPluginInstance\">attachPluginInstance</a>","description":"<p>Adds a new Plugin Instance to be deployed on the Pipeline.</p>"},{"title":"NodeManager#client","link":"<a href=\"NodeManager.html#client\">client</a>","description":"<p>The network client reference.</p>"},{"title":"NodeManager#closePipeline","link":"<a href=\"NodeManager.html#closePipeline\">closePipeline</a>","description":"<p>Closes the pipeline by queueing an Archive Config command for the NaeuralEdgeProtocol node.</p>"},{"title":"NodeManager#commit","link":"<a href=\"NodeManager.html#commit\">commit</a>","description":"<p>Commits the changes registered for the node.</p>"},{"title":"NodeManager#createPipeline","link":"<a href=\"NodeManager.html#createPipeline\">createPipeline</a>","description":"<p>Creates a pipeline on the managed node.</p>"},{"title":"NodeManager#createPluginInstance","link":"<a href=\"NodeManager.html#createPluginInstance\">createPluginInstance</a>","description":"<p>Method for creating a PluginInstance of a specific signature with the provided config. If no name is provided\na generated name will be assigned.</p>"},{"title":"NodeManager#getFullHeartbeatFromEdgeNode","link":"<a href=\"NodeManager.html#getFullHeartbeatFromEdgeNode\">getFullHeartbeatFromEdgeNode</a>","description":"<p>Sends a request for a detailed heartbeat to the node.</p>"},{"title":"NodeManager#getHeartbeatFromEdgeNode","link":"<a href=\"NodeManager.html#getHeartbeatFromEdgeNode\">getHeartbeatFromEdgeNode</a>","description":"<p>Sends a heartbeat request to the node.</p>"},{"title":"NodeManager#getPipeline","link":"<a href=\"NodeManager.html#getPipeline\">getPipeline</a>","description":"<p>Returns the pipeline with id <code>pipelineId</code> if it exists on this node.</p>"},{"title":"NodeManager#getPipelines","link":"<a href=\"NodeManager.html#getPipelines\">getPipelines</a>","description":"<p>Returns all the pipelines associated with a node.</p>"},{"title":"NodeManager#getPluginInstance","link":"<a href=\"NodeManager.html#getPluginInstance\">getPluginInstance</a>","description":"<p>Returns the Plugin Instance identified by <code>instanceId</code> from the instances running on this pipeline. If no\ninstance is found, then <code>null</code> is returned.</p>"},{"title":"NodeManager#getPluginInstances","link":"<a href=\"NodeManager.html#getPluginInstances\">getPluginInstances</a>","description":"<p>Returns the list of plugin instances running on this pipeline.</p>"},{"title":"NodeManager#linkInstances","link":"<a href=\"NodeManager.html#linkInstances\">linkInstances</a>","description":"<p>Links the instances provided as parameters.</p>"},{"title":"NodeManager#logger","link":"<a href=\"NodeManager.html#logger\">logger</a>","description":"<p>The logger handler to be used for logging messages.</p>"},{"title":"NodeManager#node","link":"<a href=\"NodeManager.html#node\">node</a>","description":"<p>The node this manager is attached to.</p>"},{"title":"NodeManager#pipelines","link":"<a href=\"NodeManager.html#pipelines\">pipelines</a>","description":"<p>The list of open Pipelines on this node.</p>"},{"title":"NodeManager#pipelinesMarkedForClosing","link":"<a href=\"NodeManager.html#pipelinesMarkedForClosing\">pipelinesMarkedForClosing</a>","description":"<p>The list of Pipelines to be closed when commiting the pending changes.</p>"},{"title":"NodeManager#removeInstanceTag","link":"<a href=\"NodeManager.html#removeInstanceTag\">removeInstanceTag</a>","description":"<p>Removes a tag from the plugin instance.</p>"},{"title":"NodeManager#removePluginInstance","link":"<a href=\"NodeManager.html#removePluginInstance\">removePluginInstance</a>","description":"<p>Removes a running plugin instance from the pipeline instance list.</p>"},{"title":"NodeManager#restartEdgeNode","link":"<a href=\"NodeManager.html#restartEdgeNode\">restartEdgeNode</a>","description":"<p>Sends a request to restart the node.</p>"},{"title":"NodeManager#setInstanceSchedule","link":"<a href=\"NodeManager.html#setInstanceSchedule\">setInstanceSchedule</a>","description":"<p>Sets the working hours schedule for the instance.\nThis method accepts either a detailed schedule for each day of the week\nor a single schedule for all days.</p>"},{"title":"NodeManager#setInstanceTags","link":"<a href=\"NodeManager.html#setInstanceTags\">setInstanceTags</a>","description":"<p>Sets the provided tags on the instance.</p>"},{"title":"NodeManager#shutdownEdgeNode","link":"<a href=\"NodeManager.html#shutdownEdgeNode\">shutdownEdgeNode</a>","description":"<p>Sends a request to stop the node.</p>"},{"title":"NodeManager#tagInstance","link":"<a href=\"NodeManager.html#tagInstance\">tagInstance</a>","description":"<p>Sets the value for a specific tag on the plugin instance.</p>"},{"title":"NodeManager#updateInstance","link":"<a href=\"NodeManager.html#updateInstance\">updateInstance</a>","description":"<p>Updates the config for a provided instance.</p>"},{"title":"NodeManager#updatePipelineMetadata","link":"<a href=\"NodeManager.html#updatePipelineMetadata\">updatePipelineMetadata</a>","description":"<p>Updates the DataCaptureThread metadata for the specified pipeline.</p>"},{"title":"NodeManager.attachPluginInstanceToPipeline","link":"<a href=\"NodeManager.html#.attachPluginInstanceToPipeline\">attachPluginInstanceToPipeline</a>","description":"<p>Static method that pushes a PluginInstance to a Pipeline. If the <code>nowatch</code> flag is set to true, this operation\nwill not automatically append a watch on this instance in the next network request. This behavior is needed when\nattaching instances found on the received heartbeat, inside internal models, or when the watch is to be added\nmanually, for supporting custom deployment mechanisms.</p>"},{"title":"NodeManager.compilePipelineBatchUpdateInstances","link":"<a href=\"NodeManager.html#.compilePipelineBatchUpdateInstances\">compilePipelineBatchUpdateInstances</a>","description":"<p>Returns the change set list for all the plugin instances running on this pipeline.</p>"},{"title":"NodeManager.compilePipelineUpdateConfig","link":"<a href=\"NodeManager.html#.compilePipelineUpdateConfig\">compilePipelineUpdateConfig</a>","description":"<p>Compiles the changeset for a given Pipeline.</p>"},{"title":"NodeManager.getNodeManager","link":"<a href=\"NodeManager.html#.getNodeManager\">getNodeManager</a>","description":"<p>Returns an instance of a NodeManager for the requested <code>node</code>.</p>"},{"title":"NodeStatus","link":"<a href=\"global.html#NodeStatus\">NodeStatus</a>"},{"title":"ObservedNodes","link":"<a href=\"global.html#ObservedNodes\">ObservedNodes</a>"},{"title":"Pipeline","link":"<a href=\"Pipeline.html\">Pipeline</a>","description":"<p>The Pipeline model constructor.</p>"},{"title":"Pipeline#_getRawPipelineCommandPayload","link":"<a href=\"Pipeline.html#_getRawPipelineCommandPayload\">_getRawPipelineCommandPayload</a>","description":"<p>Returns the Edge Node command wrapping the Pipeline command.</p>"},{"title":"Pipeline#addInstanceWatch","link":"<a href=\"Pipeline.html#addInstanceWatch\">addInstanceWatch</a>","description":"<p>Adds an <code>EE_MESSAGE_PATH</code> to watch for in the following network request.</p>"},{"title":"Pipeline#client","link":"<a href=\"Pipeline.html#client\">client</a>","description":"<p>The reference to the NaeuralEdgeProtocol Network Client.</p>"},{"title":"Pipeline#dct","link":"<a href=\"Pipeline.html#dct\">dct</a>","description":"<p>The Data Capture Thread used for feeding data to the pipeline.</p>"},{"title":"Pipeline#getClient","link":"<a href=\"Pipeline.html#getClient\">getClient</a>","description":"<p>Returns the NaeuralEdgeProtocol Network Client reference.</p>"},{"title":"Pipeline#getDataCaptureThread","link":"<a href=\"Pipeline.html#getDataCaptureThread\">getDataCaptureThread</a>","description":"<p>Returns the configured Data Capture Thread Model that feeds data into this pipeline.</p>"},{"title":"Pipeline#getId","link":"<a href=\"Pipeline.html#getId\">getId</a>","description":"<p>Returns the pipeline name/id.</p>"},{"title":"Pipeline#getInitiator","link":"<a href=\"Pipeline.html#getInitiator\">getInitiator</a>","description":"<p>Returns the id of the process that changed the pipeline last.</p>"},{"title":"Pipeline#getInstanceWatches","link":"<a href=\"Pipeline.html#getInstanceWatches\">getInstanceWatches</a>","description":"<p>Returns all configured <code>EE_MESSAGE_PATH</code>s to be watched in the following network request.</p>"},{"title":"Pipeline#getMetadata","link":"<a href=\"Pipeline.html#getMetadata\">getMetadata</a>","description":"<p>Returns the metadata set on this pipeline.</p>"},{"title":"Pipeline#getNode","link":"<a href=\"Pipeline.html#getNode\">getNode</a>","description":"<p>Returns the name of the NaeuralEdgeProtocol Network Node this pipeline runs on.</p>"},{"title":"Pipeline#getType","link":"<a href=\"Pipeline.html#getType\">getType</a>","description":"<p>Returns the type of the datasource feeding data into this pipeline.</p>"},{"title":"Pipeline#id","link":"<a href=\"Pipeline.html#id\">id</a>","description":"<p>The pipeline name.</p>"},{"title":"Pipeline#initiator","link":"<a href=\"Pipeline.html#initiator\">initiator</a>","description":"<p>The id of the process that changed the pipeline last.</p>"},{"title":"Pipeline#instances","link":"<a href=\"Pipeline.html#instances\">instances</a>","description":"<p>List of plugin instances running on this pipeline.</p>"},{"title":"Pipeline#isDirty","link":"<a href=\"Pipeline.html#isDirty\">isDirty</a>","description":"<p>Flag for signalling uncommitted changes to this model.</p>"},{"title":"Pipeline#node","link":"<a href=\"Pipeline.html#node\">node</a>","description":"<p>The NaeuralEdgeProtocol Edge Node on which this pipeline is running.</p>"},{"title":"Pipeline#removeAllInstanceWatches","link":"<a href=\"Pipeline.html#removeAllInstanceWatches\">removeAllInstanceWatches</a>","description":"<p>Removes all previously configured <code>EE_MESSAGE_PATHS</code> from the list to be watched in the following network request.</p>"},{"title":"Pipeline#removeInstanceWatch","link":"<a href=\"Pipeline.html#removeInstanceWatch\">removeInstanceWatch</a>","description":"<p>Removes a previously configured <code>EE_MESSAGE_PATH</code> from the list to be watched in the following network request.</p>"},{"title":"Pipeline#sendCommand","link":"<a href=\"Pipeline.html#sendCommand\">sendCommand</a>","description":"<p>Sends the provided <code>command</code> to the pipeline running on the NaeuralEdgeProtocol Node.</p>"},{"title":"Pipeline#updateMetadata","link":"<a href=\"Pipeline.html#updateMetadata\">updateMetadata</a>","description":"<p>Updates metadata set on this pipeline.</p>"},{"title":"Pipeline#watches","link":"<a href=\"Pipeline.html#watches\">watches</a>","description":"<p>A dictionary of paths involved in publishing messages.</p>"},{"title":"Pipeline.make","link":"<a href=\"Pipeline.html#.make\">make</a>","description":"<p>Static factory for constructing Pipeline models.</p>"},{"title":"PluginInstance","link":"<a href=\"PluginInstance.html\">PluginInstance</a>","description":"<p>The PluginInstance constructor.</p>"},{"title":"PluginInstance#_validateSchedule","link":"<a href=\"PluginInstance.html#_validateSchedule\">_validateSchedule</a>","description":"<p>Validates the structure and content of the schedule object.\nFor separate schedules, ensures each key is a valid day and each value is an array of time intervals.\nFor a single schedule for all days, ensures it's an array of time intervals.\nTime intervals should be in the format [&quot;HH:MM&quot;, &quot;HH:MM&quot;].</p>"},{"title":"PluginInstance#addTag","link":"<a href=\"PluginInstance.html#addTag\">addTag</a>","description":"<p>Adds a tag to the instance or updates an existing tag.</p>"},{"title":"PluginInstance#bulkSetTags","link":"<a href=\"PluginInstance.html#bulkSetTags\">bulkSetTags</a>","description":"<p>Sets multiple tags at once, replacing any existing tags.</p>"},{"title":"PluginInstance#collectorInstance","link":"<a href=\"PluginInstance.html#collectorInstance\">collectorInstance</a>","description":"<p>The collector instance if this instance has its results collected by another instance.</p>"},{"title":"PluginInstance#compile","link":"<a href=\"PluginInstance.html#compile\">compile</a>","description":"<p>Puts together all the information in one config object.</p>"},{"title":"PluginInstance#config","link":"<a href=\"PluginInstance.html#config\">config</a>","description":"<p>The instance config as it is on the Plugin Instance running on the NaeuralEdgeProtocol Network node.</p>"},{"title":"PluginInstance#frequency","link":"<a href=\"PluginInstance.html#frequency\">frequency</a>","description":"<p>The frequency with which this instance consumes inputs from the pipeline's DCT.</p>"},{"title":"PluginInstance#getCollectorInstance","link":"<a href=\"PluginInstance.html#getCollectorInstance\">getCollectorInstance</a>","description":"<p>Returns the path of the collecting instance.</p>"},{"title":"PluginInstance#getConfig","link":"<a href=\"PluginInstance.html#getConfig\">getConfig</a>","description":"<p>Retrieves the running config from the PluginInstance model. The returned config will be remapped\non the schema if it exists.</p>"},{"title":"PluginInstance#getInstanceStats","link":"<a href=\"PluginInstance.html#getInstanceStats\">getInstanceStats</a>","description":"<p>Returns the instance running statistics.</p>"},{"title":"PluginInstance#getLinkedInstances","link":"<a href=\"PluginInstance.html#getLinkedInstances\">getLinkedInstances</a>","description":"<p>Returns the list of collected instances.</p>"},{"title":"PluginInstance#getPipelineId","link":"<a href=\"PluginInstance.html#getPipelineId\">getPipelineId</a>","description":"<p>Returns the id of the pipeline this plugin instance is working on.</p>"},{"title":"PluginInstance#getRawInstanceCommandPayload","link":"<a href=\"PluginInstance.html#getRawInstanceCommandPayload\">getRawInstanceCommandPayload</a>","description":"<p>Returns the instance command wrapped within an NaeuralEdgeProtocol Node command.</p>"},{"title":"PluginInstance#getSchedule","link":"<a href=\"PluginInstance.html#getSchedule\">getSchedule</a>","description":"<p>Retrieves the current working hours schedule of the instance.</p>"},{"title":"PluginInstance#getSchema","link":"<a href=\"PluginInstance.html#getSchema\">getSchema</a>","description":"<p>Returns the instance's schema.</p>"},{"title":"PluginInstance#getTags","link":"<a href=\"PluginInstance.html#getTags\">getTags</a>","description":"<p>Retrieves all tags from the instance.</p>"},{"title":"PluginInstance#id","link":"<a href=\"PluginInstance.html#id\">id</a>","description":"<p>The instance id.</p>"},{"title":"PluginInstance#isCollected","link":"<a href=\"PluginInstance.html#isCollected\">isCollected</a>","description":"<p>Returns <code>true</code> if this particular instance's output is collected by another instance.</p>"},{"title":"PluginInstance#isCollecting","link":"<a href=\"PluginInstance.html#isCollecting\">isCollecting</a>","description":"<p>Returns <code>true</code> if this instance is the main instance, collecting and reporting output from other instances.</p>"},{"title":"PluginInstance#isCollectingFrom","link":"<a href=\"PluginInstance.html#isCollectingFrom\">isCollectingFrom</a>","description":"<p>Returns <code>true</code> if this instance is collecting data from the <code>tester</code> instance provided.</p>"},{"title":"PluginInstance#isDirty","link":"<a href=\"PluginInstance.html#isDirty\">isDirty</a>","description":"<p>Flag signaling that this plugin instance has changes that need to be committed to the network.</p>"},{"title":"PluginInstance#isLinkable","link":"<a href=\"PluginInstance.html#isLinkable\">isLinkable</a>","description":"<p>Returns <code>true</code> if this plugin instance is linkable with others based on the associated schema.</p>"},{"title":"PluginInstance#isLinked","link":"<a href=\"PluginInstance.html#isLinked\">isLinked</a>","description":"<p>Returns <code>true</code> if plugin instance is either collecting other instances or if its output is collected by another.</p>"},{"title":"PluginInstance#link","link":"<a href=\"PluginInstance.html#link\">link</a>","description":"<p>Attempts to link <code>this</code> instance to the <code>candidate</code> instance.</p>"},{"title":"PluginInstance#linkedInstances","link":"<a href=\"PluginInstance.html#linkedInstances\">linkedInstances</a>","description":"<p>Instances to collect results from.</p>"},{"title":"PluginInstance#makeUpdateInstancePayload","link":"<a href=\"PluginInstance.html#makeUpdateInstancePayload\">makeUpdateInstancePayload</a>","description":"<p>Computes the instance update config by comparing the config running on the NaeuralEdgeProtocol Node with the proposed\nconfiguration stored on the instance model.</p>"},{"title":"PluginInstance#outsideWorkingHours","link":"<a href=\"PluginInstance.html#outsideWorkingHours\">outsideWorkingHours</a>","description":"<p>Flag for signalling if this particular instance is outside its configured working schedule.</p>"},{"title":"PluginInstance#pipeline","link":"<a href=\"PluginInstance.html#pipeline\">pipeline</a>","description":"<p>Handler for the pipeline model this instance is deployed on.</p>"},{"title":"PluginInstance#purgeLinks","link":"<a href=\"PluginInstance.html#purgeLinks\">purgeLinks</a>","description":"<p>Removes all links to this instance.</p>"},{"title":"PluginInstance#removeTag","link":"<a href=\"PluginInstance.html#removeTag\">removeTag</a>","description":"<p>Removes a tag from the instance if it exists.</p>"},{"title":"PluginInstance#resetTags","link":"<a href=\"PluginInstance.html#resetTags\">resetTags</a>","description":"<p>Resets all tags to an empty object.</p>"},{"title":"PluginInstance#schedule","link":"<a href=\"PluginInstance.html#schedule\">schedule</a>","description":"<p>The instance schedule.</p>"},{"title":"PluginInstance#schema","link":"<a href=\"PluginInstance.html#schema\">schema</a>","description":"<p>The config object schema definition.</p>"},{"title":"PluginInstance#sendCommand","link":"<a href=\"PluginInstance.html#sendCommand\">sendCommand</a>","description":"<p>Sends a command to the instance running on the NaeuralEdgeProtocol Network node.</p>"},{"title":"PluginInstance#setCollectorInstance","link":"<a href=\"PluginInstance.html#setCollectorInstance\">setCollectorInstance</a>","description":"<p>Sets <code>this</code> instance as collected by the provided <code>instance</code>.</p>"},{"title":"PluginInstance#setPipeline","link":"<a href=\"PluginInstance.html#setPipeline\">setPipeline</a>","description":"<p>Sets the pipeline on which this instance is running.</p>"},{"title":"PluginInstance#setSchedule","link":"<a href=\"PluginInstance.html#setSchedule\">setSchedule</a>","description":"<p>Sets the working hours schedule for the instance.\nThis method accepts either a detailed schedule for each day of the week\nor a single schedule for all days.</p>"},{"title":"PluginInstance#signature","link":"<a href=\"PluginInstance.html#signature\">signature</a>","description":"<p>The plugin signature.</p>"},{"title":"PluginInstance#stats","link":"<a href=\"PluginInstance.html#stats\">stats</a>","description":"<p>Instance stats, including errors, error times, etc.</p>"},{"title":"PluginInstance#tags","link":"<a href=\"PluginInstance.html#tags\">tags</a>","description":"<p>Instance tags.</p>"},{"title":"PluginInstance#unlink","link":"<a href=\"PluginInstance.html#unlink\">unlink</a>","description":"<p>Removes the link between <code>this</code> instance and the provided <code>linkedInstance</code> instance.</p>"},{"title":"PluginInstance#updateConfig","link":"<a href=\"PluginInstance.html#updateConfig\">updateConfig</a>","description":"<p>Method for updating the config on this instance.</p>"},{"title":"PluginInstance#updateStats","link":"<a href=\"PluginInstance.html#updateStats\">updateStats</a>","description":"<p>Method for updating the running stats on this instance.</p>"},{"title":"PluginInstance.make","link":"<a href=\"PluginInstance.html#.make\">make</a>","description":"<p>Factory method for creating new <code>PluginInstance</code>s.</p>\n<p>The setup object should provide a config object and a schema for proper instantiation of the PluginInstance. If\nthe <code>schema</code> is provided, then this method will attempt to validate the config object based on the schema rules\nand throw any errors.</p>"},{"title":"RedisConnectionOptions","link":"<a href=\"global.html#RedisConnectionOptions\">RedisConnectionOptions</a>"},{"title":"RedisStateManager","link":"<a href=\"RedisStateManager.html\">RedisStateManager</a>","description":"<p>The RedisStateManager constructor.</p>"},{"title":"RedisStateManager#_acquireLock","link":"<a href=\"RedisStateManager.html#_acquireLock\">_acquireLock</a>","description":"<p>Attempts to acquire the <code>lock</code>.</p>"},{"title":"RedisStateManager#_waitForLock","link":"<a href=\"RedisStateManager.html#_waitForLock\">_waitForLock</a>","description":"<p>Waits for aquiring the <code>lock</code> for a specified amount of time defined by the <code>retryInterval</code> and number of\n<code>maxRetries</code>.</p>"},{"title":"RedisStateManager#broadcastIgnoreRequestId","link":"<a href=\"RedisStateManager.html#broadcastIgnoreRequestId\">broadcastIgnoreRequestId</a>","description":"<p>Signals the subscribed threads to remove the watch for a specific session id.</p>"},{"title":"RedisStateManager#broadcastPayloadStickySession","link":"<a href=\"RedisStateManager.html#broadcastPayloadStickySession\">broadcastPayloadStickySession</a>","description":"<p>Broadcast a sticky id that is to be found in the payloads. Any payload containing this session-id should be\nrouted to this specific process.</p>"},{"title":"RedisStateManager#broadcastRequestId","link":"<a href=\"RedisStateManager.html#broadcastRequestId\">broadcastRequestId</a>","description":"<p>Broadcasts interest for a specific session id to all the subscribed threads. The session id will be used for\ncorrect routing of the received notifications from the network.</p>"},{"title":"RedisStateManager#broadcastUpdateFleet","link":"<a href=\"RedisStateManager.html#broadcastUpdateFleet\">broadcastUpdateFleet</a>","description":"<p>Broadcasts working fleet to all subscribed threads.</p>"},{"title":"RedisStateManager#cache","link":"<a href=\"RedisStateManager.html#cache\">cache</a>","description":"<p>The Redis handler for performing cache updates and reads.</p>"},{"title":"RedisStateManager#getK8sClusterStatus","link":"<a href=\"RedisStateManager.html#getK8sClusterStatus\">getK8sClusterStatus</a>","description":"<p>Returns the Kubernetes cluster status as observed by the supervisor node.</p>"},{"title":"RedisStateManager#getNetworkSnapshot","link":"<a href=\"RedisStateManager.html#getNetworkSnapshot\">getNetworkSnapshot</a>","description":"<p>Returns the network information as received from the supervisors.</p>"},{"title":"RedisStateManager#getNetworkSupervisors","link":"<a href=\"RedisStateManager.html#getNetworkSupervisors\">getNetworkSupervisors</a>","description":"<p>Get the list of observed network supervisors.</p>"},{"title":"RedisStateManager#getNodeInfo","link":"<a href=\"RedisStateManager.html#getNodeInfo\">getNodeInfo</a>","description":"<p>Returns the processed heartbeat cached for a specific <code>node</code>.</p>"},{"title":"RedisStateManager#getUniverse","link":"<a href=\"RedisStateManager.html#getUniverse\">getUniverse</a>","description":"<p>Returns the list of all observed network nodes. An observed node is any of the nodes that published a\npayload, notification or heartbeat, which was intercepted by the worker threads, even if that message was\ndiscarded because it was not from the controlled working fleet.</p>"},{"title":"RedisStateManager#inboxId","link":"<a href=\"RedisStateManager.html#inboxId\">inboxId</a>","description":"<p>The <code>inboxId</code> to be read for messages received from other state managers/worker threads.</p>"},{"title":"RedisStateManager#logger","link":"<a href=\"RedisStateManager.html#logger\">logger</a>","description":"<p>Logger handler.</p>"},{"title":"RedisStateManager#markNodeAsSeen","link":"<a href=\"RedisStateManager.html#markNodeAsSeen\">markNodeAsSeen</a>","description":"<p>Will mark a specific node as seen in the dictionary of nodes.</p>"},{"title":"RedisStateManager#markSupervisor","link":"<a href=\"RedisStateManager.html#markSupervisor\">markSupervisor</a>","description":"<p>Store information about an observed supervisor in the cache.</p>"},{"title":"RedisStateManager#nodeInfoUpdate","link":"<a href=\"RedisStateManager.html#nodeInfoUpdate\">nodeInfoUpdate</a>","description":"<p>Stores the processed heartbeat data into the Redis cache.</p>"},{"title":"RedisStateManager#pubSubChannel","link":"<a href=\"RedisStateManager.html#pubSubChannel\">pubSubChannel</a>","description":"<p>The channel to subscribe to.</p>"},{"title":"RedisStateManager#publishChannel","link":"<a href=\"RedisStateManager.html#publishChannel\">publishChannel</a>","description":"<p>The Redis subscription channel for publishing updates to other state managers.</p>"},{"title":"RedisStateManager#saveK8sClusterStatus","link":"<a href=\"RedisStateManager.html#saveK8sClusterStatus\">saveK8sClusterStatus</a>","description":"<p>Stores the Kubernetes cluster metrics as provided by the supervisor node.</p>"},{"title":"RedisStateManager#subscriptionChannel","link":"<a href=\"RedisStateManager.html#subscriptionChannel\">subscriptionChannel</a>","description":"<p>The Redis subscription channel for receiving updates from other state managers.</p>"},{"title":"RedisStateManager#updateNetworkSnapshot","link":"<a href=\"RedisStateManager.html#updateNetworkSnapshot\">updateNetworkSnapshot</a>","description":"<p>Will store the network snapshot as seen from a specific supervisor node.</p>"},{"title":"RedisStateManager.getClusterStatusKeyAndLock","link":"<a href=\"RedisStateManager.html#.getClusterStatusKeyAndLock\">getClusterStatusKeyAndLock</a>","description":"<p>Returns the cache key and lock name for reading and updating Kubernetes cluster info.</p>"},{"title":"RedisStateManager.getObservedSupervisorsKeyAndLock","link":"<a href=\"RedisStateManager.html#.getObservedSupervisorsKeyAndLock\">getObservedSupervisorsKeyAndLock</a>","description":"<p>Returns the cache key and lock name for the list of observed network supervisors.</p>"},{"title":"RedisStateManager.getRedisHeartbeatKey","link":"<a href=\"RedisStateManager.html#.getRedisHeartbeatKey\">getRedisHeartbeatKey</a>","description":"<p>Returns the cache key based on the provided <code>node</code> name.</p>"},{"title":"RedisStateManager.getRedisUniverseKeyAndLock","link":"<a href=\"RedisStateManager.html#.getRedisUniverseKeyAndLock\">getRedisUniverseKeyAndLock</a>","description":"<p>Returns the cache key name and lock name for the observed universe storage.</p>"},{"title":"RedisStateManager.getSupervisorKeyAndLock","link":"<a href=\"RedisStateManager.html#.getSupervisorKeyAndLock\">getSupervisorKeyAndLock</a>","description":"<p>Returns the cache key and lock name for reading and updating information received from a specific <code>supervisor</code>.</p>"},{"title":"SchemaCollection","link":"<a href=\"global.html#SchemaCollection\">SchemaCollection</a>","description":"<p>A dictionary object holding schema configurations</p>"},{"title":"SchemaDefinition","link":"<a href=\"global.html#SchemaDefinition\">SchemaDefinition</a>","description":"<p>Represents the schema configuration</p>"},{"title":"SchemasRepository","link":"<a href=\"global.html#SchemasRepository\">SchemasRepository</a>"},{"title":"State","link":"<a href=\"State.html\">State</a>","description":"<p>The <code>State</code> constructor. Will attach any needed listeners.</p>"},{"title":"State#broadcastPayloadStickySession","link":"<a href=\"State.html#broadcastPayloadStickySession\">broadcastPayloadStickySession</a>","description":"<p>Broadcast a sticky id that is to be found in the payloads. Any payload containing this session-id should be\nrouted to this specific process.</p>"},{"title":"State#broadcastUpdateFleet","link":"<a href=\"State.html#broadcastUpdateFleet\">broadcastUpdateFleet</a>","description":"<p>Update fleet and notify other interested parties (managed threads or other observing processes) about the update.</p>"},{"title":"State#fleet","link":"<a href=\"State.html#fleet\">fleet</a>","description":"<p>The fleet to follow.</p>"},{"title":"State#getFleet","link":"<a href=\"State.html#getFleet\">getFleet</a>","description":"<p>Return the status of the controlled fleet.</p>"},{"title":"State#getK8sClusterStatus","link":"<a href=\"State.html#getK8sClusterStatus\">getK8sClusterStatus</a>","description":"<p>Returns the last known status of the Kubernetes cluster.</p>"},{"title":"State#getNetworkStatus","link":"<a href=\"State.html#getNetworkStatus\">getNetworkStatus</a>","description":"<p>Returns the network as seen by the <code>supervisor</code> node.</p>"},{"title":"State#getNodeInfo","link":"<a href=\"State.html#getNodeInfo\">getNodeInfo</a>","description":"<p>Retrieves the cached heartbeat info.</p>"},{"title":"State#getRunningInstanceConfig","link":"<a href=\"State.html#getRunningInstanceConfig\">getRunningInstanceConfig</a>","description":"<p>Returns the configuration of a specific instance deployed on a pipeline running on the provided node.</p>"},{"title":"State#getRunningPipelineConfig","link":"<a href=\"State.html#getRunningPipelineConfig\">getRunningPipelineConfig</a>","description":"<p>Returns the configuration of a specific pipeline running on the requested node.</p>"},{"title":"State#getUniverse","link":"<a href=\"State.html#getUniverse\">getUniverse</a>","description":"<p>A method that returns all the nodes observed from the heartbeat stream with the observation timestamps.</p>"},{"title":"State#manager","link":"<a href=\"State.html#manager\">manager</a>","description":"<p>The state manager to use for storing and applying state operations.</p>"},{"title":"State#markNodeAsSeen","link":"<a href=\"State.html#markNodeAsSeen\">markNodeAsSeen</a>","description":"<p>Will mark a specific node as seen in the dictionary of nodes.</p>"},{"title":"State#networkRequestsHandler","link":"<a href=\"State.html#networkRequestsHandler\">networkRequestsHandler</a>","description":"<p>The open network transactions handler.</p>"},{"title":"State#nodeInfoUpdate","link":"<a href=\"State.html#nodeInfoUpdate\">nodeInfoUpdate</a>","description":"<p>Method for storing the processed heartbeat into the state.</p>"},{"title":"State#onRequestResponseNotification","link":"<a href=\"State.html#onRequestResponseNotification\">onRequestResponseNotification</a>","description":"<p>Pushes the received message to the transaction handler watching the message target.</p>"},{"title":"State#registerMessage","link":"<a href=\"State.html#registerMessage\">registerMessage</a>","description":"<p>Creates and configures a new transaction that will follow the completion of the request published to the\nnetwork.</p>"},{"title":"State#registerThread","link":"<a href=\"State.html#registerThread\">registerThread</a>","description":"<p>Registers a thread into the InternalStateManager if that is the state manager loaded.</p>"},{"title":"State#saveK8sClusterStatus","link":"<a href=\"State.html#saveK8sClusterStatus\">saveK8sClusterStatus</a>","description":"<p>Save the current status of the Kubernetes cluster.</p>"},{"title":"State#storeNetworkInfo","link":"<a href=\"State.html#storeNetworkInfo\">storeNetworkInfo</a>","description":"<p>Store the network snapshot as provided by the network supervisor.</p>"},{"title":"State#type","link":"<a href=\"State.html#type\">type</a>","description":"<p>The type of manager to use. It can be either INTERNAL_STATE_MANAGER or REDIS_STATE_MANAGER.</p>"},{"title":"Thread#encryptCommunication","link":"<a href=\"Thread.html#encryptCommunication\">encryptCommunication</a>","description":"<p>Flag for signaling if messages should be encrypted.</p>"},{"title":"Thread#mainThread","link":"<a href=\"Thread.html#mainThread\">mainThread</a>","description":"<p>The main thread connection.</p>"},{"title":"Thread#mqttClient","link":"<a href=\"Thread.html#mqttClient\">mqttClient</a>","description":"<p>The network connection.</p>"},{"title":"Thread#secure","link":"<a href=\"Thread.html#secure\">secure</a>","description":"<p>Flag for signaling if unsafe messages should be processed.</p>"},{"title":"Thread#zxaibc","link":"<a href=\"Thread.html#zxaibc\">zxaibc</a>","description":"<p>The NaeuralEdgeProtocol Blockchain Engine</p>"},{"title":"ThreadLogger#mainThread","link":"<a href=\"ThreadLogger.html#mainThread\">mainThread</a>"},{"title":"ZxAIBC","link":"<a href=\"ZxAIBC.html\">ZxAIBC</a>","description":"<p>NaeuralEdgeProtocol Network Blockchain engine constructor.</p>"},{"title":"ZxAIBC#_deriveSharedKey","link":"<a href=\"ZxAIBC.html#_deriveSharedKey\">_deriveSharedKey</a>"},{"title":"ZxAIBC#_getHash","link":"<a href=\"ZxAIBC.html#_getHash\">_getHash</a>","description":"<p>Returns the hash for a provided input. Inputs can be either a string or an object. Any other datatype will\nthrow an error.</p>"},{"title":"ZxAIBC#_getPrivateKey","link":"<a href=\"ZxAIBC.html#_getPrivateKey\">_getPrivateKey</a>"},{"title":"ZxAIBC#_prepareMessage","link":"<a href=\"ZxAIBC.html#_prepareMessage\">_prepareMessage</a>","description":"<p>Generates and applies all the signatures and hashes to the input object. The format can be either\n<code>json</code> or <code>object</code> and it allows the caller to select the format of the returned value.</p>"},{"title":"ZxAIBC#_signHash","link":"<a href=\"ZxAIBC.html#_signHash\">_signHash</a>","description":"<p>Generates the signature for the provided hash.</p>"},{"title":"ZxAIBC#compressedPublicKey","link":"<a href=\"ZxAIBC.html#compressedPublicKey\">compressedPublicKey</a>","description":"<p>A handy cache for the public key.</p>"},{"title":"ZxAIBC#debugMode","link":"<a href=\"ZxAIBC.html#debugMode\">debugMode</a>","description":"<p>Flag to boot the engine in debug mode. Will output signature verification logs.</p>"},{"title":"ZxAIBC#getAddress","link":"<a href=\"ZxAIBC.html#getAddress\">getAddress</a>","description":"<p>Returns the NaeuralEdgeProtocol Network blockchain address.</p>"},{"title":"ZxAIBC#getPublicKeyDER","link":"<a href=\"ZxAIBC.html#getPublicKeyDER\">getPublicKeyDER</a>","description":"<p>Returns the public key as a string.</p>"},{"title":"ZxAIBC#keyPair","link":"<a href=\"ZxAIBC.html#keyPair\">keyPair</a>","description":"<p>The keypair that is in use.</p>"},{"title":"ZxAIBC#sign","link":"<a href=\"ZxAIBC.html#sign\">sign</a>","description":"<p>Returns the signed input object with all the cryptographical metadata appended to it. The format can be either\n<code>json</code> or <code>object</code> and it allows the caller to select the format of the returned value.</p>"},{"title":"ZxAIBC#verify","link":"<a href=\"ZxAIBC.html#verify\">verify</a>","description":"<p>Verifies the message signature. If the message is incorrectly signed, will return false.</p>"},{"title":"ZxAIBC._removeAddressPrefix","link":"<a href=\"ZxAIBC.html#._removeAddressPrefix\">_removeAddressPrefix</a>","description":"<p>Removes the prefix from the address.</p>"},{"title":"ZxAIBC.generateKeys","link":"<a href=\"ZxAIBC.html#.generateKeys\">generateKeys</a>","description":"<p>Generates a pair of public-private keys that can be used throughout this module\nor when interacting with the network.</p>"},{"title":"ZxAIBlockchainOptions","link":"<a href=\"global.html#ZxAIBlockchainOptions\">ZxAIBlockchainOptions</a>"},{"title":"ZxAIClient","link":"<a href=\"ZxAIClient.html\">ZxAIClient</a>","description":"<p>The network client constructor.</p>"},{"title":"ZxAIClient#_checkNode","link":"<a href=\"ZxAIClient.html#_checkNode\">_checkNode</a>","description":"<p>Private method for checking if a specified node is in the controlled fleet or if it's heartbeat has been\nwitnessed.</p>"},{"title":"ZxAIClient#_onStateMessage","link":"<a href=\"ZxAIClient.html#_onStateMessage\">_onStateMessage</a>","description":"<p>Factory method for attaching callbacks on state messages.</p>"},{"title":"ZxAIClient#_onThreadMessage","link":"<a href=\"ZxAIClient.html#_onThreadMessage\">_onThreadMessage</a>","description":"<p>Internal method for processing messages received from the worker threads.</p>"},{"title":"ZxAIClient#alertedNodes","link":"<a href=\"ZxAIClient.html#alertedNodes\">alertedNodes</a>","description":"<p>Dictionary of all alerted nodes.</p>"},{"title":"ZxAIClient#boot","link":"<a href=\"ZxAIClient.html#boot\">boot</a>","description":"<p>This method connects the client to the network and spawns all the threads on the network streams.</p>"},{"title":"ZxAIClient#bootOptions","link":"<a href=\"ZxAIClient.html#bootOptions\">bootOptions</a>","description":"<p>The boot options.</p>"},{"title":"ZxAIClient#checkBootComplete","link":"<a href=\"ZxAIClient.html#checkBootComplete\">checkBootComplete</a>","description":"<p>Internal method for compiling the boot status for the subordinated worker threads.</p>"},{"title":"ZxAIClient#deregisterEdgeNode","link":"<a href=\"ZxAIClient.html#deregisterEdgeNode\">deregisterEdgeNode</a>","description":"<p>Method for deregistering a network node without rebooting the client.</p>"},{"title":"ZxAIClient#getBlockChainAddress","link":"<a href=\"ZxAIClient.html#getBlockChainAddress\">getBlockChainAddress</a>","description":"<p>This method returns the NaeuralEdgeProtocol Network unique blockchain address.</p>"},{"title":"ZxAIClient#getDCTSchema","link":"<a href=\"ZxAIClient.html#getDCTSchema\">getDCTSchema</a>","description":"<p>Returns the schema associated to a DCT name.</p>"},{"title":"ZxAIClient#getFleet","link":"<a href=\"ZxAIClient.html#getFleet\">getFleet</a>","description":"<p>Method for retrieving the status of the fleet of network nodes that are processed by this instance.</p>"},{"title":"ZxAIClient#getK8sClusterStatus","link":"<a href=\"ZxAIClient.html#getK8sClusterStatus\">getK8sClusterStatus</a>","description":"<p>Returns the Kubernetes cluster status if the network supervisor node is deployed on Kubernetes. Otherwise it\nreturns null.</p>"},{"title":"ZxAIClient#getMemoryStats","link":"<a href=\"ZxAIClient.html#getMemoryStats\">getMemoryStats</a>","description":"<p>Returns the snapshot of the memory usage.</p>"},{"title":"ZxAIClient#getName","link":"<a href=\"ZxAIClient.html#getName\">getName</a>","description":"<p>This method returns the initiator name used for the connection.</p>"},{"title":"ZxAIClient#getNetworkStatus","link":"<a href=\"ZxAIClient.html#getNetworkStatus\">getNetworkStatus</a>","description":"<p>Returns the current network status as seen by the specified supervisor.\nIf <code>supervisor</code> is null, it returns the latest information received.</p>"},{"title":"ZxAIClient#getNodeManager","link":"<a href=\"ZxAIClient.html#getNodeManager\">getNodeManager</a>","description":"<p>Returns a <code>NodeManager</code> for a specific node.</p>"},{"title":"ZxAIClient#getPluginSchema","link":"<a href=\"ZxAIClient.html#getPluginSchema\">getPluginSchema</a>","description":"<p>Returns the loaded schema for a specific plugin <code>signature</code>.</p>"},{"title":"ZxAIClient#getRegisteredDCTTypes","link":"<a href=\"ZxAIClient.html#getRegisteredDCTTypes\">getRegisteredDCTTypes</a>","description":"<p>Returns a list of all the registered DCT Schemas.</p>"},{"title":"ZxAIClient#getRegisteredPluginTypes","link":"<a href=\"ZxAIClient.html#getRegisteredPluginTypes\">getRegisteredPluginTypes</a>","description":"<p>Returns the list of Plugin Schemas associated to this network client.</p>"},{"title":"ZxAIClient#getStream","link":"<a href=\"ZxAIClient.html#getStream\">getStream</a>","description":"<p>Returns a specific stream of events in the network. It can offer a window inside all the messages published\nin a specific message type category.</p>"},{"title":"ZxAIClient#getUniverse","link":"<a href=\"ZxAIClient.html#getUniverse\">getUniverse</a>","description":"<p>Returns the client's observable universe: all the hosts that sent a heartbeat that are outside\nthis client's fleet.</p>"},{"title":"ZxAIClient#logger","link":"<a href=\"ZxAIClient.html#logger\">logger</a>","description":"<p>Reference to the logger to use.</p>"},{"title":"ZxAIClient#markThreadStatus","link":"<a href=\"ZxAIClient.html#markThreadStatus\">markThreadStatus</a>","description":"<p>Internal method for keeping track of worker threads statuses.</p>"},{"title":"ZxAIClient#memoryUsageStats","link":"<a href=\"ZxAIClient.html#memoryUsageStats\">memoryUsageStats</a>","description":"<p>Statistics about the memory used by the SDK.</p>"},{"title":"ZxAIClient#mqttClient","link":"<a href=\"ZxAIClient.html#mqttClient\">mqttClient</a>","description":"<p>The network connection.</p>"},{"title":"ZxAIClient#networkStreams","link":"<a href=\"ZxAIClient.html#networkStreams\">networkStreams</a>","description":"<p>Internal dictionary keeping references to the streams of events received from the child threads.</p>"},{"title":"ZxAIClient#publish","link":"<a href=\"ZxAIClient.html#publish\">publish</a>","description":"<p>Method for publishing a message for an NaeuralEdgeProtocol Node.</p>"},{"title":"ZxAIClient#registerDCTType","link":"<a href=\"ZxAIClient.html#registerDCTType\">registerDCTType</a>","description":"<p>Allows for hot registration of a new DCT Schema to be used by the network client.</p>"},{"title":"ZxAIClient#registerEdgeNode","link":"<a href=\"ZxAIClient.html#registerEdgeNode\">registerEdgeNode</a>","description":"<p>Method for registering a new network node without rebooting the client.</p>"},{"title":"ZxAIClient#registerPluginSchema","link":"<a href=\"ZxAIClient.html#registerPluginSchema\">registerPluginSchema</a>","description":"<p>Associates a schema with a plugin <code>signature</code>.</p>"},{"title":"ZxAIClient#schemas","link":"<a href=\"ZxAIClient.html#schemas\">schemas</a>","description":"<p>The repository of schemas to be used when interacting with instances and pipelines.</p>"},{"title":"ZxAIClient#state","link":"<a href=\"ZxAIClient.html#state\">state</a>","description":"<p>The state to update.</p>"},{"title":"ZxAIClient#threads","link":"<a href=\"ZxAIClient.html#threads\">threads</a>","description":"<p>Internal dictionary keeping references to child threads.</p>"},{"title":"ZxAIClient#topicPaths","link":"<a href=\"ZxAIClient.html#topicPaths\">topicPaths</a>","description":"<p>Dictionary describing the network topics to listen to.</p>"},{"title":"ZxAIClient#universeAddresses","link":"<a href=\"ZxAIClient.html#universeAddresses\">universeAddresses</a>","description":"<p>A dictionary with network addresses associated to node names.</p>"},{"title":"ZxAIClient#zxAIbc","link":"<a href=\"ZxAIClient.html#zxAIbc\">zxAIbc</a>","description":"<p>Internal reference to the Blockchain Engine</p>"},{"title":"ZxAIClientEvent","link":"<a href=\"global.html#ZxAIClientEvent\">ZxAIClientEvent</a>","description":"<p>Enum NaeuralEdgeProtocol Client Events</p>"},{"title":"ZxAIClientOptions","link":"<a href=\"global.html#ZxAIClientOptions\">ZxAIClientOptions</a>"},{"title":"ZxAICommand","link":"<a href=\"global.html#ZxAICommand\">ZxAICommand</a>"},{"title":"ZxAIEventType","link":"<a href=\"global.html#ZxAIEventType\">ZxAIEventType</a>","description":"<p>Enum NaeuralEdgeProtocol Event Stream Types</p>"},{"title":"ZxAIUpdateInstanceConfig","link":"<a href=\"global.html#ZxAIUpdateInstanceConfig\">ZxAIUpdateInstanceConfig</a>"},{"title":"applyDefaultsToObject","link":"<a href=\"global.html#applyDefaultsToObject\">applyDefaultsToObject</a>","description":"<p>Helper function that returns an object with all the missing mandatory properties based on a generic object provided.\nThe mandatory properties are compuded based on the provided schema. All the properties added are assigned the default\nvalues from the schema definition. If no default value is provided in the schema, the property is not added to the\nreturned object.</p>"},{"title":"archiveConfigRequestStrategy","link":"<a href=\"global.html#archiveConfigRequestStrategy\">archiveConfigRequestStrategy</a>","description":"<p>Defines the strategy to be applied when attempting to solve an ARCHIVE_CONFIG network request.</p>"},{"title":"base64ToUrlSafeBase64","link":"<a href=\"global.html#base64ToUrlSafeBase64\">base64ToUrlSafeBase64</a>","description":"<p>Helper function that replaces any URL-unsafe characters from a base64 string.</p>"},{"title":"camelToZxAIFormat","link":"<a href=\"global.html#camelToZxAIFormat\">camelToZxAIFormat</a>","description":"<p>Helper function that transforms camelCase strings into NaeuralEdgeProtocol network specific format.\nConventionally, NaeuralEdgeProtocol commands have the keys in uppercase with underscore as word separator.</p>\n<p>eg. blockchainKeyPair will be transformed as BLOCKCHAIN_KEY_PAIR</p>"},{"title":"checkMandatoryFields","link":"<a href=\"global.html#checkMandatoryFields\">checkMandatoryFields</a>","description":"<p>Helper function that tests a generic object to have all the mandatory properties populated.</p>"},{"title":"checkType","link":"<a href=\"global.html#checkType\">checkType</a>","description":"<p>Helper function for checking if a value-object is of a specific type (as defined in the schema) and if it's value\ncomplies with the allowedValues rule.</p>"},{"title":"computeDifferences","link":"<a href=\"global.html#computeDifferences\">computeDifferences</a>","description":"<p>Helper function that compares two generic objects and returns the modified keys from the second object when compared\nto the first.</p>"},{"title":"convertKeysToCamelFormat","link":"<a href=\"global.html#convertKeysToCamelFormat\">convertKeysToCamelFormat</a>","description":"<p>Helper function for transforming all the keys of the provided generic object into the\nconventional camelCase key format.</p>"},{"title":"convertKeysToZxAIFormat","link":"<a href=\"global.html#convertKeysToZxAIFormat\">convertKeysToZxAIFormat</a>","description":"<p>Helper function for transforming all the keys of the provided generic object into the\nconventional NaeuralEdgeProtocol Network key format.</p>"},{"title":"dctSchemas","link":"<a href=\"global.html#dctSchemas\">dctSchemas</a>"},{"title":"decode","link":"<a href=\"global.html#decode\">decode</a>","description":"<p>Helper function for unzipping a string that has been received as base64.</p>\n<p>The reverse process can be obtained with <code>encode(code)</code>;</p>"},{"title":"defaultSchemas","link":"<a href=\"global.html#defaultSchemas\">defaultSchemas</a>","description":"<p>The default schemas supported by the SDK.</p>"},{"title":"encode","link":"<a href=\"global.html#encode\">encode</a>","description":"<p>Helper function for zipping a string and encoding the result as base64.</p>\n<p>The output can be decoded using <code>decode(string)</code>.</p>"},{"title":"generateId","link":"<a href=\"global.html#generateId\">generateId</a>","description":"<p>Helper function that extracts the first two groups of characters from a v4 Uuid. This function can be used for\ngenerating unique identification strings for threads, messages or other entities.</p>"},{"title":"getRedisConnection","link":"<a href=\"global.html#getRedisConnection\">getRedisConnection</a>","description":"<p>Helper function for providing Redis connection.</p>"},{"title":"hasFleetFilter","link":"<a href=\"global.html#hasFleetFilter\">hasFleetFilter</a>","description":"<p>This function returns true if the fleet definition is correct and is not the definition of the whole network.\nFor processing the entire network, the fleet should be configured as [ ALL_EDGE_NODES ].</p>"},{"title":"identityFormatter","link":"<a href=\"global.html#identityFormatter\">identityFormatter</a>","description":"<p>The default formatter. Does not alter the received message.</p>"},{"title":"pick","link":"<a href=\"global.html#pick\">pick</a>","description":"<p>Helper function that extracts a sub-object from the provided object based on the provided path.\nThe path string will represent each selection from the nested levels, separated by dots.</p>\n<p>Examples:</p>\n<ul>\n<li><code>name.first</code> will attempt to return the value stored under the <code>first</code> key of the nested object stored\nat <code>name</code> property</li>\n<li><code>contacts.2.email</code> will attempt to extract the email stored under the third index of the <code>contacts</code> array</li>\n</ul>\n<p>If no value can be found at the end of the path, the function returns <code>undefined</code>.</p>"},{"title":"rawIn","link":"<a href=\"global.html#rawIn\">rawIn</a>","description":"<p>Transforms <code>raw</code> messages into the default format.\nTODO: add link to the internal format docs.</p>"},{"title":"schema","link":"<a href=\"global.html#schema\">schema</a>","description":"<p>The MetaStream schema definition.</p>"},{"title":"schema","link":"<a href=\"global.html#schema\">schema</a>","description":"<p>The VideoFile schema definition.</p>"},{"title":"schema","link":"<a href=\"global.html#schema\">schema</a>","description":"<p>The VideoFile schema definition.</p>"},{"title":"schema","link":"<a href=\"global.html#schema\">schema</a>","description":"<p>The VoidStream schema definition.</p>"},{"title":"schemas","link":"<a href=\"global.html#schemas\">schemas</a>"},{"title":"sleep","link":"<a href=\"global.html#sleep\">sleep</a>","description":"<p>Helper function that resolves a promise after a specified amount of milliseconds.</p>"},{"title":"updateConfigRequestStrategy","link":"<a href=\"global.html#updateConfigRequestStrategy\">updateConfigRequestStrategy</a>","description":"<p>Defines the strategy to be applied when attempting to solve an UPDATE_CONFIG network request.</p>"},{"title":"updatePipelineInstanceRequestStrategy","link":"<a href=\"global.html#updatePipelineInstanceRequestStrategy\">updatePipelineInstanceRequestStrategy</a>","description":"<p>Defines the strategy to be applied when attempting to solve an UPDATE_PIPELINE_INSTANCE or\nBATCH_UPDATE_PIPELINE_INSTANCE network request.</p>"},{"title":"urlSafeBase64ToBase64","link":"<a href=\"global.html#urlSafeBase64ToBase64\">urlSafeBase64ToBase64</a>","description":"<p>Helper function that reverts any replaced URL-unsafe characters in a base64 string.</p>"},{"title":"validateAgainstSchema","link":"<a href=\"global.html#validateAgainstSchema\">validateAgainstSchema</a>","description":"<p>Helper function that validates a generic object based on a received schema. Will return an array of all the validation\nerrors, if any, empty array otherwise. This function will not check if all the mandatory keys are present, it will\nonly test if the provided values are of the correct type and the allowedValues rule is not broken.</p>"},{"title":"zxAIFormatToCamel","link":"<a href=\"global.html#zxAIFormatToCamel\">zxAIFormatToCamel</a>","description":"<p>Helper function for transforming an NaeuralEdgeProtocol Network conventional OBJECT_KEY into a camel case objectKey.</p>"}]}